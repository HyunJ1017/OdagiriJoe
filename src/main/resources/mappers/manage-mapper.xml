<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.kh.plklj.manage.mapper.ManageMapper">


	<!--작가 목록 -->
	<select id="getArtistListCount" resultType="_int">
		SELECT
		COUNT(*)
		FROM ARTIST A
		JOIN MEMBER M ON A.MEMBER_NO = M.MEMBER_NO
		WHERE M.MEMBER_PENALTY = 1
		AND A.ARTIST_REG = 'Y'
		AND M.MEMBER_DEL_FL = 'N'
		
	</select>

	<select id="getArtistList" resultType="map">
	SELECT
    A.MEMBER_NO AS "memberNo",
    A.ARTIST_PROFILE AS "artistProfile",
    A.ARTIST_NICKNAME AS "artistNickname",
    A.ARTIST_PROFILE AS "artistProfile",
    (
        SELECT SUM(END_PRICE)
        FROM PIECE P
        LEFT JOIN AUCTION AU ON P.PIECE_NO = AU.PIECE_NO
        WHERE P.MEMBER_NO = A.MEMBER_NO
    ) AS "endPrice",
    (
        SELECT SUM(SELL_PRICE)
        FROM PIECE P2
        JOIN PIECE_SELL PS ON (P2.PIECE_NO = PS.PIECE_NO)
        JOIN PAYMENT_RECORD PR ON (P2.PIECE_NO = PR.PIECE_NO)
        WHERE P2.MEMBER_NO = A.MEMBER_NO
    ) AS "sellPrice"
	FROM ARTIST A
	JOIN MEMBER M ON A.MEMBER_NO = M.MEMBER_NO
	WHERE M.MEMBER_PENALTY = 1
	AND A.ARTIST_REG = 'Y'
	AND M.MEMBER_DEL_FL = 'N'

	</select>

	<!-- 회원 목록 -->
	<select id="getMemberListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_DEL_FL = 'N'
		AND MEMBER_PENALTY = 1

	</select>
	<select id="getMemberList" resultType="map">
		SELECT
		M.MEMBER_NO AS "memberNo",
		M.MEMBER_NAME AS "memberName",
		COALESCE(SUM(A.END_PRICE), 0) AS "endPrice"
		FROM MEMBER M
		LEFT JOIN AUCTION A
		ON M.MEMBER_NO = A.MEMBER_NO
		WHERE M.MEMBER_DEL_FL = 'N'
		AND M.MEMBER_PENALTY = 1
		GROUP BY M.MEMBER_NO, M.MEMBER_NAME

	</select>

	<!--콘텐츠 관리 -->
	<select id="getContentListCount" resultType="_int">
		SELECT
		COUNT(*)
		FROM
		REPORT R
		JOIN PIECE P ON R.PIECE_NO = P.PIECE_NO
		LEFT JOIN AUCTION
		A ON P.PIECE_NO = A.PIECE_NO
		LEFT JOIN ARTIST D ON R.MEMBER_NO =
		D.MEMBER_NO
		WHERE
		R.REPORT_DEL_FL ='N'
	</select>


	<select id="getContentList" resultType="map">
		SELECT
		R.REPORT_NO
		"reportNo",
		R.MEMBER_NO "memberNo",
		P.PIECE_TITLE AS "pieceName",
		P.SIZE_X || ' x ' || P.SIZE_Y AS "pieceSize",
	    TO_CHAR(A.END_PRICE, 'FM999,999,999,999') AS "auctionPrice",
		D.ARTIST_NICKNAME AS "artistNickname",
		R.PIECE_NO AS "pieceNo",
		P.PIECE_RENAME AS "pieceRename"
		FROM
		REPORT R
		JOIN
		PIECE P ON R.PIECE_NO = P.PIECE_NO
		LEFT JOIN AUCTION A ON P.PIECE_NO = A.PIECE_NO
		LEFT JOIN ARTIST D ON R.MEMBER_NO = D.MEMBER_NO
		WHERE
		R.REPORT_DEL_FL ='N'

	</select>

	<!--작가 승인 요청  -->
	<select id="getRequestListCount" resultType="_int">
		SELECT COUNT(*)
		FROM ARTIST
		WHERE ARTIST_REG = 'N'
	</select>

	<select id="getRequestList" resultType="map">
		SELECT ARTIST_NICKNAME AS "artistNickname",
			MEMBER_NO AS "memberNo",
			ARTIST_PROFILE AS "artistProfile"
			
		FROM ARTIST
		WHERE ARTIST_REG = 'N'
	</select>


	<!-- 회원 정지  -->
	<update id="suspendMember">
	UPDATE "MEMBER"
	SET MEMBER_PENALTY = 31
	WHERE MEMBER_PENALTY = 1
	AND MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 탈퇴  -->
	<update id="withdrawMember">
	UPDATE "MEMBER"
	SET MEMBER_DEL_FL = 'Y'
	WHERE MEMBER_NO = #{memberNo}
	
	</update>
	
	<!-- 작가 정지  -->
	<update id="suspendAritist">
	UPDATE "MEMBER"
	SET MEMBER_PENALTY = 31	
	WHERE MEMBER_NO = #{memberNo}
	AND MEMBER_NO IN(
  	SELECT M.MEMBER_NO
  	FROM "MEMBER" M
  	LEFT JOIN ARTIST A ON A.MEMBER_NO = M.MEMBER_NO
 	WHERE A.ARTIST_REG = 'Y')
	
	</update>
	<!-- 작가 탈퇴 -->
	<update id="withdrawArtist">
	UPDATE "MEMBER"
	SET MEMBER_DEL_FL = 'Y'
	WHERE MEMBER_NO IN (
  	SELECT M.MEMBER_NO
  	FROM "MEMBER" M
  	LEFT JOIN ARTIST A ON M.MEMBER_NO = A.MEMBER_NO
  	WHERE A.MEMBER_NO = #{memberNo}
  	AND A.ARTIST_REG = 'Y')
	</update>
	
	<!--콘텐츠 관리 상세보기  -->
 	<select id="contentsDetailList">
	SELECT REPORT_NO, REPORT_TYPE, REPORT_CONTENT
	FROM REPORT
	WHERE REPORT_NO = #{reportNo}
	</select>  
	
	<!--신고 목록 삭제  -->
	<delete id="deleteReportList">
	DELETE FROM REPORT
	WHERE REPORT_NO=#{reportNo}
	</delete>
	
	<!-- 게시글 삭제  -->
	<delete id="deletePieceList">
	DELETE FROM PIECE
	WHERE PIECE_NO = #{pieceNo}
	</delete>
	
	<!-- 승인요청내역 프로필 불러오기  -->
	<select id="getprofileList" resultMap="ProfileResultMap">
	SELECT W.WORK_NO, W.MEMBER_NO, A.ARTIST_NICKNAME, A.ARTIST_PORTFOLIO, A.ARTIST_PROFILE
	FROM "WORK" W
	LEFT JOIN ARTIST A ON A.MEMBER_NO=W.MEMBER_NO
	WHERE W.MEMBER_NO = #{memberNo}
	</select>
	
	<resultMap type="Manage" id="ProfileResultMap">
	<id property = "memberNo" column="MEMBER_NO"/> 
	<collection property="workDetail" select="getworkDetail" column="MEMBER_NO"
	javaType="java.util.ArrayList" ofType="string">
	</collection>
	</resultMap>
	
	
	<select id="getworkDetail" resultType="string">
	SELECT WORK_DETAIL
	FROM WORK
	WHERE MEMBER_NO = #{memberNo}
	
	</select>
	
	<!--승인 요청 승인 -->
	<update id="getapproveArtist">
	UPDATE ARTIST
	SET ARTIST_REG='Y'
	WHERE ARTIST_REG='N'
	AND
	MEMBER_NO = #{memberNo} 
	</update>
	
	<!-- 승인 요청 거절  -->
	

    <!-- ARTIST 테이블에서 데이터 삭제 -->
    <delete id="getrejectArtist">
    DELETE FROM ARTIST
    WHERE MEMBER_NO = #{memberNo}
    </delete>
	<delete id="getrejectArtist2">  <!-- 먼저 실행 -->
 	DELETE FROM WORK
    WHERE MEMBER_NO = #{memberNo}
	</delete>
	
	<!--공지사항 목록 불러오기  -->
	<select id="getNoticeListCount" resultType="_int">
	SELECT COUNT(*)
	FROM NOTICE
	WHERE NOTICE_DEL_FL = 'N'
	</select>
	
	<select id="getNoticeList" resultType="map">
	SELECT NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE, NOTICE_DEL_FL
	FROM NOTICE
	WHERE NOTICE_DEL_FL = 'N'
	ORDER BY NOTICE_DATE DESC
	</select>
	
	<!-- 공지사항 등록하기 -->
	<insert id="addNoticeList" >
	INSERT INTO NOTICE
	VALUES(SEQ_NOTICE_NO.NEXTVAL, #{noticeTitle}, #{noticeContent}, DEFAULT, DEFAULT )
	</insert>
	
	<!-- 공지사항 삭제하기 -->
	<delete id="getdeleteNoticeList">
	DELETE FROM NOTICE
	WHERE NOTICE_NO = #{noticeNo}
	</delete>
</mapper>

 