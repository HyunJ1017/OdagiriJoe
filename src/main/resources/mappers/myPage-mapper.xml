<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "edu.kh.plklj.member.mapper.MyPageMapper">

	<update id="updateName">
		UPDATE "MEMBER"
		SET MEMBER_NAME = #{memberName}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 비밀번호변경을위한 멤버정보조회 -->
	<select id="getMember" resultType="Member">
		SELECT
			MEMBER_NO,
			MEMBER_ID,
			MEMBER_PW,
			MEMBER_PHONE
		FROM "MEMBER"
		WHERE MEMBER_No = #{memberNo}
		AND MEMBER_DEL_FL = 'N'
	</select>
	
	<!-- 전화번호 변경하기 -->
	<update id="updatePhone">
		UPDATE "MEMBER"
		SET MEMBER_PHONE = #{memberPhone}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 은행목록 불러오기 -->
	<select id="getBankList" resultType="BankCode">
		SELECT
			BANK_CODE,
			BANK_NAME
		FROM "BANK_CODE_LIST"
	</select>
	
	<!-- 작가 활동명 중복검사 -->
	<select id="checkNickname">
		SELECT
			COUNT(*)
		FROM
			"ARTIST"
		WHERE
			ARTIST_NICKNAME = #{inputNickname}
	</select>
	
	<!-- 작가등록 -->
	<insert id="insertArtist">
		INSERT INTO "ARTIST"
		VALUES(
			#{memberNo},
			#{artistProfile},
			#{artistNickname},
			#{artistPortfolio},
			#{bankCode},
			#{bankNo}
		)
	</insert>
	
	
	<!-- 1:1 문의사항 등록 -->
	<insert id="insertQuestion">
		INSERT INTO "QUESTION"
		VALUES(
			SEQ_QUESTION_NO.NEXTVAL,
			#{memberNo},
			#{questionContent},
			DEFAULT,
			DEFAULT,
			DEFAULT,
			NULL,
			#{questionCategoryNo}
		)
	</insert>
	
	<!-- 전체 문의수 조회 -->
	<select id="getQuestionListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "QUESTION"
		WHERE
			MEMBER_NO = #{memberNo}
		AND QUESTION_DEL_FL = 'N'
	</select>
	
	<!-- 전체 종류 조회 -->
	<select id="getCategoryList" resultType="Notice">
		SELECT QUESTION_CATEGORY_NO, QUESTION_CATEGORY_NAME
		FROM "QUESTION_CATEGORY"
	</select>
	
	<!-- 문의 조회 -->
	<select id="getQuestionList" resultType="Notice">
		SELECT
			QUESTION_NO,
			QUESTION_CONTENT,
			(TO_CHAR(QUESTION_DATE, 'YY-MM-DD')) AS QUESTION_DATE,
			QUESTION_ANS_FL,
			QUESTION_ANSWER,
			QUESTION_CATEGORY_NO,
			(SELECT QUESTION_CATEGORY_NAME
			 FROM QUESTION_CATEGORY QC
			 WHERE QC.QUESTION_CATEGORY_NO = Q.QUESTION_CATEGORY_NO
			 ) AS QUESTION_CATEGORY_NAME
		FROM "QUESTION" Q
		WHERE
			MEMBER_NO = 1
		AND QUESTION_DEL_FL = 'N'
		ORDER BY QUESTION_NO DESC
	</select>
	
	<!-- 1:1 문의사항 삭제하기 -->
	<update id="deleteQuestion">
		UPDATE "QUESTION"
		SET QUESTION_DEL_FL = 'Y'
		WHERE QUESTION_NO = #{questionNo}
	</update>
		
	<!-- 전체 팔로우 수 조회 -->
	<select id="getFollowListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "FOLLOW"
		WHERE
			MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 전체 위시리스트 수 조회 -->
	<select id="getWishListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "WISH"
		WHERE
			MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 팔로우 목록 조회 -->
	<select id="getFollowList" resultType="Member">
		SELECT
			ART.MEMBER_NO,
			ART.ARTIST_PROFILE,
			ART.ARTIST_NICKNAME
		FROM
			FOLLOW F
		LEFT JOIN "ARTIST" ART ON (F.ARTIST_NO = ART.MEMBER_NO)
		WHERE
			F.MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 위시 목록 조회 -->
	<select id="getWishList" resultType="Piece">
		SELECT
			W.PIECE_NO,
			P.MEMBER_NO,
			(SELECT ARTIST_NICKNAME
			 FROM ARTIST A
			 WHERE A.MEMBER_NO = P.MEMBER_NO) AS "ARTIST_NICKNAME",
			P.PIECE_RENAME,
			P.PIECE_TITLE,
			P.PIECE_STATUS,
			(TO_CHAR(PA.START_DATE, 'YYYY-MM-DD HH24:MI')) AS START_DATE,
			(TO_CHAR(PA.START_DATE - 8, 'MM/DD(DY)')) AS OPEN_DATE,
			(TO_CHAR(PA.START_DATE - 7, 'MM/DD(DY)')) AS PREVIEW_START_DATE,
			(TO_CHAR(PA.START_DATE - 1, 'MM/DD(DY)')) AS PREVIEW_END_DATE
		FROM
			WISH W
		LEFT JOIN PIECE P ON (W.PIECE_NO = P.PIECE_NO)
		LEFT JOIN PIECE_AUCTION PA ON (PA.PIECE_NO = W.PIECE_NO)
		WHERE
			W.MEMBER_NO = #{memberNo}
		AND	P.PIECE_TYPE = 2
		AND P.PIECE_STATUS IN ('A', 'S')
		ORDER BY PIECE_NO DESC
	</select>
	
	<!-- 경력사항 집어넣기 -->
	<insert id="insertWork">
	  INSERT ALL
	  <foreach collection="workDetails" item="workDetail">
	    <if test="workDetail != null and workDetail.trim() != ''">
	      INTO WORK (WORK_NO, MEMBER_NO, WORK_DETAIL)
	      VALUES (SEQ_WORK_NO.NEXTVAL, #{memberNo}, #{workDetail})
	    </if>
	  </foreach>
	  SELECT 1 FROM DUAL
	</insert>

	<!-- 작가 - 진행중인경매목록 조회 -->
	<select id="artistAuction" resultType="Piece">
		SELECT
			P.PIECE_NO,
			P.MEMBER_NO,
			PIECE_RENAME,
			PIECE_TITLE,
			PIECE_STATUS,
			(TO_CHAR(PA.START_DATE    , 'MM/DD(DY)')) AS START_DATE,
			(TO_CHAR(PA.START_DATE - 8, 'MM/DD(DY)')) AS OPEN_DATE,
			(TO_CHAR(PA.START_DATE - 7, 'MM/DD(DY)')) AS PREVIEW_START_DATE,
			(TO_CHAR(PA.START_DATE - 1, 'MM/DD(DY)')) AS PREVIEW_END_DATE,
			(TO_CHAR(END_DATE, 'MM/DD(DY)')) AS END_DATE,
			TO_CHAR(PA.START_PRICE, 'FM999,999,999,999') AS START_PRICE,
			TO_CHAR(PA.FINAL_PRICE, 'FM999,999,999,999') AS FINAL_PRICE,
			D.DELIVERY_STATUS
		FROM "PIECE" P
		LEFT JOIN PIECE_AUCTION PA ON (P.PIECE_NO = PA.PIECE_NO)
		LEFT JOIN DELIVERY D ON (D.PIECE_NO = P.PIECE_NO) 
		WHERE
			P.PIECE_TYPE = 2
		AND P.MEMBER_NO = #{memberNo}
		AND PIECE_STATUS NOT IN ('F')
		<![CDATA[
		AND (D.DELIVERY_STATUS < 3 OR D.DELIVERY_STATUS IS NULL)
		]]>
		ORDER BY PA.START_DATE ASC
	</select>
	
	<!-- 낙찰했는데 아직 입금안한 경매품 -->
	<select id="getBuyList" resultType="Piece">
		SELECT
			P.PIECE_NO,
			PIECE_RENAME,
			PIECE_TITLE,
			SIZE_X,
			SIZE_Y,
			(SELECT ARTIST_NICKNAME FROM ARTIST AR WHERE AR.MEMBER_NO = P.MEMBER_NO) AS ARTIST_NICKNAME,
			PIECE_STATUS,
			TO_CHAR(PA.FINAL_PRICE, 'FM999,999,999,999') AS FINAL_PRICE
		FROM PIECE P
		LEFT JOIN PIECE_AUCTION PA ON (P.PIECE_NO = PA.PIECE_NO)
		WHERE
			PIECE_TYPE = 2
		AND P.PIECE_STATUS = 'D'
		AND (SELECT A.MEMBER_NO
			 FROM AUCTION A
			 WHERE
			 	 PA.FINAL_PRICE = A.END_PRICE
			 AND A.PIECE_NO = P.PIECE_NO) = #{memberNo}
	</select>
	
	<!-- 오늘것중 입찰한 경매품 -->
	<select id="getAuctionList" resultType="Piece">
		SELECT
			P.PIECE_NO,
			PIECE_RENAME,
			PIECE_TITLE,
			PIECE_STATUS,
			SIZE_X,
			SIZE_Y,
			(SELECT TO_CHAR(END_PRICE, 'FM999,999,999,999')
			FROM AUCTION A2
			WHERE A2.MEMBER_NO = #{memberNo}
			AND  A2.PIECE_NO = P.PIECE_NO
			ORDER BY END_PRICE DESC
			FETCH FIRST 1 ROWS ONLY) AS END_PRICE
		FROM PIECE P
		LEFT JOIN PIECE_AUCTION PA ON (P.PIECE_NO = PA.PIECE_NO)
		WHERE
			PIECE_TYPE = 2
		AND P.PIECE_STATUS = 'S'
		AND #{memberNo} IN
			(SELECT A.MEMBER_NO
			 FROM AUCTION A
			 WHERE A.PIECE_NO = P.PIECE_NO)
	</select>

	<select id="getEndprice" resultType="integer">
		SELECT END_PRICE
		FROM AUCTION
		WHERE PIECE_NO = #{pieceNo}
		ORDER BY END_PRICE DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
</mapper>